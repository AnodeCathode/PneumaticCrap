buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "Minecraft Forge"
            url = "http://files.minecraftforge.net/maven"
        }
         maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// define the properties file
ext.configFile = file "build.prop"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

repositories {
		maven { // The repo from which to get waila
			name "Mobius Repo"
			url "http://mobiusstrip.eu/maven"
		}
		maven { // the repo from which to get NEI and stuff 
			name 'CB Repo'
			url "http://chickenbones.net/maven/"
		}
		maven {
			name = "ic2"
			url = "http://maven.ic2.player.to/"
		}
		maven {
			name = "IGW"
			url = "http://maven.k-4u.nl/"
		}
		maven {
			name 'OpenComputers'
			url = "http://maven.cil.li/"
		}
}
apply plugin: 'java'
apply plugin: 'forge'
apply plugin: 'maven'
group = config.group_name
version = config.mod_version
archivesBaseName = "${config.minecraft_version}-${config.mod_id}"

minecraft {
    version = config.minecraft_version + "-" + config.forge_version + "-" + config.minecraft_version 
    if(file('../run').exists()) {
        runDir = "../run"
    } else {
        runDir = ""
    }
}

dependencies {
 
	println("  Adding dependencies!")

	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev"
	compile "codechicken:ForgeMultipart:1.7.10-1.1.0.297:dev"
	compile "mcp.mobius.waila:Waila:1.5.10_1.7.10"
  compile "pneumaticCraft:PneumaticCraft-1.7.10:1.12.1-144:userdev"
  //compile project(':PneumaticCraft')
	println("  Finished adding dependencies!")
}
// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
			exclude 'Models'
			exclude 'unused resources'
			exclude '**/.txt'
			exclude '**/.docx'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
	
	api {
    java {
        srcDir 'api'
    }
}
}


processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand ([
            'mod_version': project.config.mod_version,
            'minecraft_version': project.config.minecraft_version,
        ])
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

clean {
  delete "bin"
}
jar {

}
task wrapper(type: Wrapper) {
	gradleVersion = '2.2.1'
}